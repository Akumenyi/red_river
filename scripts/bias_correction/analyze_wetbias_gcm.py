'''
Script to examine wet day bias of CMIP5 model realizations relative to
observations (Aphrodite precipitation). Uses data generated by
calc_wetbias_gcm_data.R.
'''

import esd
import glob
import itertools
import matplotlib.pyplot as plt
import os
import pandas as pd
import seaborn as sns
import xarray as xr

if __name__ == '__main__':
    
    path_in_cmip5 = esd.cfg.path_cmip5_wetbias
    paths_in = sorted(glob.glob(os.path.join(path_in_cmip5, '*')))
        
    fpaths_pr = sorted(list(itertools.chain.
                            from_iterable([glob.glob(os.path.join(apath,'pr.day*'))
                                           for apath in paths_in])))
    
    def process_file(fpath):
        
        print fpath
        ds = xr.open_dataset(fpath)
        wetbias = ds.wetbias.mean(dim=('lat','lon'))
        wetbias.name = os.path.basename(fpath)
        return wetbias.to_series()
    
    wetbias_ls = [process_file(fpath) for fpath in fpaths_pr]
    wetbias = pd.concat(wetbias_ls, axis=1)   
     
    mean_bias = wetbias.mean(axis=0)
    
    wetbias.mean(axis=1).plot()
    plt.xlabel('Year Day')
    plt.ylabel('Bias')
    plt.title("Wet Day Bias")
    
    # IPSL is only model with an overall mean dry bias
    print mean_bias[mean_bias < 1]
    
    # % of yday windows with dry bias
    n_drybias = (wetbias < 1).sum(axis=0)
    pct_drybias = ((n_drybias / 366.0)*100)
    (pct_drybias == 0).sum() / float(len(pct_drybias))
    
    
    # Pct wet/dry by year day
    (((wetbias > 1).sum(axis=1) / float(wetbias.shape[1]))*100).plot()
    (((wetbias < 1).sum(axis=1) / float(wetbias.shape[1]))*100).plot()   